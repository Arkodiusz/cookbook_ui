{"version":3,"sources":["components/Header.js","components/Footer.js","assets/default-img.png","components/Recipes.js","components/About.js","components/Ingredients.js","components/Recipe.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Header","location","useLocation","className","to","size","pathname","style","width","Footer","Recipes","recipes","map","recipe","id","src","imageUrl","undefined","image","toString","includes","alt","name","portions","time","About","Ingredients","extractedRecipeId","useState","ingredients","setIngredients","addMode","setAddMode","editMode","setEditMode","newName","setNewName","newQuantity","setNewQuantity","newUnit","setNewUnit","recipeId","useEffect","getIngredients","a","fetch","res","json","fetchedIngredients","console","log","then","saveNewIngredient","alert","newIngredient","quantity","unit","method","headers","body","JSON","stringify","clearInputs","data","updateIngredient","indexOfOldIngredient","indexOf","find","ingredient","newIngredients","deleteIngredient","window","confirm","status","filter","toLowerCase","onClick","type","placeholder","value","onChange","e","target","Recipe","onDelete","onUpdate","setRecipe","newImageUrl","setNewImageUrl","newPortions","setNewPortions","newTime","setNewTime","newPreparation","setNewPreparation","navigate","useNavigate","split","pop","getRecipe","fetchedRecipe","deleteRecipe","replace","updateRecipe","preparation","newRecipe","validateImageUrl","color","prepareTimeValue","Form","onSubmit","submitForm","App","setRecipes","getRecipes","fetchedRecipes","saveNewRecipe","filterRecipes","replaceRecipe","index","newRecipes","hashType","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.351c3b61.chunk.js","sourcesContent":["import {MdAddCircle, MdHome} from \"react-icons/md\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <header className='header'>\r\n            <Link to='/'>\r\n                <div className='icon'>\r\n                    <MdHome\r\n                        size={35}\r\n                    />\r\n                </div>\r\n            </Link>\r\n\r\n            <h1>COOKBOOK</h1>\r\n\r\n            {location.pathname === '/' ? (\r\n                <Link to='/form'>\r\n                    <div className='icon'>\r\n                        <MdAddCircle\r\n                            size={35}\r\n                        />\r\n                    </div>\r\n                </Link>\r\n            ) : (\r\n                <div style={{width: 35}}></div>\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {Link} from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            2021 @ AJ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Link to='/about'>About</Link>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/default-img.b4a515a7.png\";","import image from \"../assets/default-img.png\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Recipes = ({recipes}) => {\r\n\r\n    function validateImageUrl(imageUrl) {\r\n        if (imageUrl === undefined) {\r\n            return image.toString()\r\n        }\r\n        if (imageUrl === '' || !(imageUrl.includes('http'))) {\r\n            return image.toString()\r\n        }\r\n        return imageUrl\r\n    }\r\n\r\n    return (\r\n        <div className='recipesContainer'>\r\n\r\n            {recipes.map((recipe) => (\r\n                <Link to={`/recipe/${recipe.id}`} key={recipe.id}>\r\n                    <div className='recipesThumbnail' >\r\n                        <img\r\n                            src={validateImageUrl(recipe.imageUrl)}\r\n                            alt=''\r\n                        />\r\n                        <div className='recipesThumbnailBar'>\r\n                            <h3>{recipe.name}</h3>\r\n                            <div className='recipesThumbnailBarBottom'>\r\n                                <h6>PORTIONS :&nbsp;&nbsp;{recipe.portions === 0 ? '?' : recipe.portions}</h6>\r\n                                <h6>PREP.&nbsp;&nbsp;TIME :&nbsp;&nbsp;{recipe.time === '' ? '?' : recipe.time}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipes\r\n","import {Link} from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <div>\r\n            <span>ABOUT</span>\r\n            <br/><br/><br/><br/>\r\n            <Link to ='/'><br/>Go back</Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default About\r\n","import {IoMdAddCircle, MdCancel, MdCheckCircle, MdDeleteForever, MdEdit} from \"react-icons/all\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst Ingredients = ({extractedRecipeId}) => {\r\n    const [ingredients, setIngredients] = useState([])\r\n    const [addMode, setAddMode] = useState(false)\r\n    const [editMode, setEditMode] = useState(0)\r\n    const [newName, setNewName] = useState('')\r\n    const [newQuantity, setNewQuantity] = useState('')\r\n    const [newUnit, setNewUnit] = useState('')\r\n    const recipeId = extractedRecipeId\r\n\r\n    useEffect(() => {\r\n        const getIngredients = async () => {\r\n            const res = await fetch(`https://bcookbook.herokuapp.com/recipes/${recipeId}/ingredients`)\r\n            const fetchedIngredients = await res.json()\r\n            console.log('fetched ingredients', fetchedIngredients)\r\n            setIngredients(fetchedIngredients)\r\n        }\r\n        getIngredients().then()\r\n    }, [recipeId]);\r\n\r\n    const saveNewIngredient = async () => {\r\n        if (newName === '' || newQuantity === '' || newUnit === '' || newUnit === 'unit') {\r\n            //TODO: replace alert with popup\r\n            alert('Please fill all inputs')\r\n            return\r\n        }\r\n        const newIngredient = {\r\n            name: newName,\r\n            quantity: newQuantity,\r\n            unit: newUnit\r\n        }\r\n        const res = await fetch(`https://bcookbook.herokuapp.com/recipes/${recipeId}/ingredients`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newIngredient),\r\n        })\r\n        console.log('saved ingredient', newIngredient)\r\n        clearInputs()\r\n        setAddMode(false)\r\n        const data = await res.json()\r\n        setIngredients([...ingredients, data])\r\n    }\r\n\r\n    const updateIngredient = async (id) => {\r\n        if (newName === '' || newQuantity === '' || newUnit === '' || newUnit === 'unit') {\r\n            //TODO: replace alert with popup\r\n            alert('Please fill all inputs')\r\n            return\r\n        }\r\n        const newIngredient = {\r\n            name: newName,\r\n            quantity: newQuantity,\r\n            unit: newUnit\r\n        }\r\n        const res = await fetch(`https://bcookbook.herokuapp.com/recipes/${recipeId}/ingredients/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newIngredient),\r\n        })\r\n        const data = await res.json()\r\n        const indexOfOldIngredient = ingredients.indexOf(ingredients.find((ingredient) => ingredient.id === id))\r\n        const newIngredients = ingredients\r\n        newIngredients[indexOfOldIngredient] = data\r\n        setIngredients(newIngredients)\r\n        console.log('edited ingredient =>', data)\r\n        clearInputs()\r\n        setEditMode(0)\r\n    }\r\n\r\n    const deleteIngredient = async (id) => {\r\n        if (!window.confirm(\"Are you sure you wish to delete this item?\")) {\r\n            return\r\n        }\r\n        const res = await fetch(`https://bcookbook.herokuapp.com/recipes/${recipeId}/ingredients/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n        res.status === 200\r\n            ? setIngredients(ingredients.filter((ingredient) => ingredient.id !== id))\r\n            //TODO: replace alert with popup\r\n            : alert('Error Deleting This Ingredient')\r\n        console.log('deleted ingredient id =>', id)\r\n    }\r\n\r\n    function clearInputs() {\r\n        setNewName('')\r\n        setNewQuantity('')\r\n        setNewUnit('')\r\n    }\r\n\r\n    return (\r\n        <div className='ingredientsTableContainer'>\r\n            <h3>INGREDIENTS:</h3>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>NAME</th>\r\n                    <th>QUANTITY</th>\r\n                    <th>UNIT</th>\r\n                    <th>OPTIONS</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {ingredients.map((ingredient) =>\r\n                    editMode !== ingredient.id ? (\r\n                        // ********* ROW IN NORMAL MODE ********\r\n                        <tr key={ingredient.id}>\r\n                            <td>\r\n                                {ingredient.name}\r\n                            </td>\r\n                            <td>\r\n                                {ingredient.quantity}\r\n                            </td>\r\n                            <td>\r\n                                {ingredient.unit.toLowerCase()}\r\n                            </td>\r\n                            <td className='ingredientsSetupColumn'>\r\n                                <div className='icon'>\r\n                                    <MdEdit\r\n                                        size={25}\r\n                                        onClick={() => {\r\n                                            setAddMode(false)\r\n                                            setNewName(ingredient.name)\r\n                                            setNewQuantity(ingredient.quantity)\r\n                                            setNewUnit(ingredient.unit)\r\n                                            setEditMode(ingredient.id)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='icon'>\r\n                                    <MdDeleteForever\r\n                                        size={25}\r\n                                        onClick={() => deleteIngredient(ingredient.id)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ) : (\r\n                        // ********* ROW IN EDIT MODE ********\r\n                        <tr key={ingredient.id}>\r\n                            <td>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder='name'\r\n                                    value={newName}\r\n                                    onChange={(e) => setNewName(e.target.value)}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                    type='number'\r\n                                    placeholder='quantity'\r\n                                    value={newQuantity}\r\n                                    onChange={(e) => setNewQuantity(e.target.value)}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                <select name=\"newUnit\"\r\n                                        value={newUnit} onChange={(e) => setNewUnit(e.target.value)}>\r\n                                    <option value=\"\">unit</option>\r\n                                    <option value=\"G\">g</option>\r\n                                    <option value=\"DAG\">dag</option>\r\n                                    <option value=\"KG\">kg</option>\r\n                                    <option value=\"ML\">ml</option>\r\n                                    <option value=\"L\">l</option>\r\n                                    <option value=\"TEASPOON\">teaspoon</option>\r\n                                    <option value=\"SPOON\">spoon</option>\r\n                                    <option value=\"PINCH\">pinch</option>\r\n                                    <option value=\"HANDFUL\">handful</option>\r\n                                    <option value=\"PIECE\">piece</option>\r\n                                </select>\r\n                            </td>\r\n                            <td className='ingredientsSetupColumn'>\r\n                                <div className='icon'>\r\n                                    <MdCheckCircle\r\n                                        size={25}\r\n                                        onClick={() => updateIngredient(ingredient.id)}\r\n                                    />\r\n                                </div>\r\n                                <div className='icon'>\r\n                                    <MdCancel\r\n                                        size={25}\r\n                                        onClick={() => {\r\n                                            setEditMode(0)\r\n                                            clearInputs()\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    )\r\n                )}\r\n                {!addMode ? (\r\n                    // ********* ADD ROW DISABLED ********\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td className='ingredientsSetupColumn'>\r\n                            <div className='icon'>\r\n                                <IoMdAddCircle\r\n                                    size={25}\r\n                                    onClick={() => {\r\n                                        setEditMode(0)\r\n                                        clearInputs()\r\n                                        setAddMode(true)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    // ********* ADD ROW ENABLED ********\r\n                    <tr>\r\n                        <td>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='name'\r\n                                value={newName}\r\n                                onChange={(e) => setNewName(e.target.value)}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                type='number'\r\n                                placeholder='quantity'\r\n                                value={newQuantity}\r\n                                onChange={(e) => setNewQuantity(e.target.value)}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <select value={newUnit} onChange={(e) => setNewUnit(e.target.value)}>\r\n                                <option value=\"\">unit</option>\r\n                                <option value=\"G\">g</option>\r\n                                <option value=\"DAG\">dag</option>\r\n                                <option value=\"KG\">kg</option>\r\n                                <option value=\"ML\">ml</option>\r\n                                <option value=\"L\">l</option>\r\n                                <option value=\"TEASPOON\">teaspoon</option>\r\n                                <option value=\"SPOON\">spoon</option>\r\n                                <option value=\"PINCH\">pinch</option>\r\n                                <option value=\"HANDFUL\">handful</option>\r\n                                <option value=\"PIECE\">piece</option>\r\n                            </select>\r\n                        </td>\r\n                        <td className='ingredientsSetupColumn'>\r\n                            <div className='icon'>\r\n                                <MdCheckCircle\r\n                                    size={25}\r\n                                    onClick={() => saveNewIngredient()}\r\n                                />\r\n                            </div>\r\n                            <div className='icon'>\r\n                                <MdCancel\r\n                                    size={25}\r\n                                    onClick={() => {\r\n                                        clearInputs()\r\n                                        setAddMode(false)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Ingredients","import image from '../assets/default-img.png'\r\nimport {useEffect, useState} from \"react\";\r\nimport Ingredients from \"./Ingredients\";\r\nimport {MdCancel, MdCheckCircle, MdDeleteForever, MdEdit} from \"react-icons/all\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst Recipe = ({onDelete, onUpdate}) => {\r\n    const [recipe, setRecipe] = useState([])\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [newName, setNewName] = useState('')\r\n    const [newImageUrl, setNewImageUrl] = useState('')\r\n    const [newPortions, setNewPortions] = useState('')\r\n    const [newTime, setNewTime] = useState('')\r\n    const [newPreparation, setNewPreparation] = useState('')\r\n    const navigate = useNavigate()\r\n    const recipeId = useLocation().pathname.split(\"/\").pop()\r\n\r\n    useEffect(() => {\r\n        const getRecipe = async () => {\r\n            const res = await fetch(`https://bcookbook.herokuapp.com/recipes/${recipeId}`)\r\n            const fetchedRecipe = await res.json()\r\n            console.log('fetched recipe =>', fetchedRecipe)\r\n            setRecipe(fetchedRecipe)\r\n        }\r\n        getRecipe().then()\r\n    }, [recipeId]);\r\n\r\n    const deleteRecipe = async (id) => {\r\n        //TODO: replace confirm with popup\r\n        if (!window.confirm(\"Are you sure you wish to delete this item?\")) {\r\n            return\r\n        }\r\n        const res = await fetch(`https://bcookbook.herokuapp.com/recipes/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n        if (res.status !== 200) {\r\n            //TODO: replace alert with popup\r\n            alert('Error Deleting This Recipe')\r\n            return\r\n        }\r\n        await onDelete(id)\r\n        navigate('/', {replace: true})\r\n        console.log('deleted recipe id =>', id)\r\n    }\r\n\r\n    const updateRecipe = async () => {\r\n        //TODO: url validation\r\n        if (newName === '' || newImageUrl === '' || newPortions === '' || newTime === '' || newPreparation === '') {\r\n            //TODO: replace alert with popup\r\n            alert('Please fill all inputs')\r\n            return\r\n        }\r\n        if (newName === recipe.name && newImageUrl === recipe.imageUrl && newPortions === recipe.portions && newTime === recipe.time && newPreparation === recipe.preparation) {\r\n            //TODO: replace alert with popup\r\n            alert('Notching changed')\r\n            return\r\n        }\r\n        const newRecipe = {\r\n            id: recipeId,\r\n            name: newName,\r\n            imageUrl: newImageUrl,\r\n            portions: newPortions,\r\n            time: newTime,\r\n            preparation: newPreparation\r\n        }\r\n        const res = await fetch(`https://bcookbook.herokuapp.com/recipes`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newRecipe),\r\n        })\r\n        const data = await res.json()\r\n        setRecipe(data)\r\n        console.log('edited recipe =>', data)\r\n        setEditMode(false)\r\n        clearInputs()\r\n        await onUpdate(data)\r\n    }\r\n\r\n    function validateImageUrl(imageUrl) {\r\n        if (imageUrl === undefined) {\r\n            return image.toString()\r\n        }\r\n        if (imageUrl === '' || !(imageUrl.includes('http'))) {\r\n            return image.toString()\r\n        }\r\n        return imageUrl\r\n    }\r\n\r\n    function clearInputs() {\r\n        setNewName('')\r\n        setNewImageUrl('')\r\n        setNewPortions('')\r\n        setNewTime('')\r\n        setNewPreparation('')\r\n    }\r\n\r\n    function preparePortionsValue(value) {\r\n        if (value === 0) {\r\n            return '?'\r\n        }\r\n        if (value > 10 ) {\r\n            return '> 10'\r\n        }\r\n        return value\r\n    }\r\n\r\n    function prepareTimeValue(value) {\r\n        if (value === '') {\r\n            return '?'\r\n        }\r\n        if (value > 10 ) {\r\n            return '> 4 h'\r\n        }\r\n        return value\r\n    }\r\n\r\n    return (\r\n        <div className='recipe'>\r\n            <div className='recipePictureContainer'>\r\n\r\n                {!editMode ? (\r\n                    <img\r\n                        src={validateImageUrl(recipe.imageUrl)}\r\n                        alt=''\r\n                    />\r\n                ): (\r\n                    <img\r\n                        src={validateImageUrl(newImageUrl)}\r\n                        alt=''\r\n                    />\r\n                )}\r\n\r\n                <div className='recipePictureContainerTopBar'>\r\n\r\n                    {!editMode ? (\r\n                        <div className={'recipePictureContainerTopBarEditBox'}>\r\n                            <div className='icon' style={{color: 'white'}}>\r\n                                <MdEdit\r\n                                    size={30}\r\n                                    onClick={() => {\r\n                                        setNewName(recipe.name)\r\n                                        setNewImageUrl(recipe.imageUrl)\r\n                                        setNewPortions(recipe.portions)\r\n                                        setNewTime(recipe.time)\r\n                                        setNewPreparation(recipe.preparation)\r\n                                        setEditMode(true)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={'recipePictureContainerTopBarEditBox'}>\r\n                            <div className='icon' style={{color: 'white'}}>\r\n                                <MdCheckCircle\r\n                                    size={30}\r\n                                    onClick={() => updateRecipe()}\r\n                                />\r\n                            </div>\r\n                            <div className='icon' style={{color: 'white'}}>\r\n                                <MdCancel\r\n                                    size={30}\r\n                                    onClick={() => {\r\n                                        setEditMode(false)\r\n                                        clearInputs()\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {!editMode ? (\r\n                        <h2>{recipe.name}</h2>\r\n                    ) : (\r\n                        <input\r\n                            type='text'\r\n                            placeholder='name'\r\n                            value={newName}\r\n                            onChange={(e) => setNewName(e.target.value)}\r\n                        />\r\n                    )}\r\n                    <div className='recipePictureContainerTopBarDeleteBox'>\r\n                        <div className='icon' style={{color: 'white'}}>\r\n                            <MdDeleteForever\r\n                                size={30}\r\n                                onClick={() => deleteRecipe(recipe.id)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {!editMode ? (\r\n                    <></>\r\n                ) : (\r\n                    <input\r\n                        id='recipeImgUrlInput'\r\n                        type='text'\r\n                        placeholder='imageUrl'\r\n                        value={newImageUrl}\r\n                        onChange={(e) => setNewImageUrl(e.target.value)}\r\n                    />\r\n                )}\r\n\r\n                {!editMode ? (\r\n                    <span>\r\n                        <h5>PORTIONS :&ensp;{preparePortionsValue(recipe.portions)}</h5>\r\n                        <h5>PREP.&ensp;TIME :&ensp;{prepareTimeValue(recipe.time)}</h5>\r\n                    </span>\r\n                ) : (\r\n                    <span>\r\n                        <div className='recipePictureContainerEditBox'>\r\n                            <h5>PORTIONS :&ensp;</h5>\r\n                            <select value={newPortions} onChange={(e) => setNewPortions(e.target.value)}>\r\n                                <option value=\"0\">?</option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"11\">> 10</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='recipePictureContainerEditBox'>\r\n                            <h5>PREP.&ensp;TIME :&ensp;</h5>\r\n                            <select value={newTime} onChange={(e) => setNewTime(e.target.value)}>\r\n                                <option value=\"?\">?</option>\r\n                                <option value=\"5 min\">5 min</option>\r\n                                <option value=\"10 min\">10 min</option>\r\n                                <option value=\"15 min\">15 min</option>\r\n                                <option value=\"30 min\">30 min</option>\r\n                                <option value=\"45 min\">45 min</option>\r\n                                <option value=\"1 h\">1 h</option>\r\n                                <option value=\"1,5 h\">1,5 h</option>\r\n                                <option value=\"2 h\">2 h</option>\r\n                                <option value=\"3 h\">3 h</option>\r\n                                <option value=\"> 4 h\">> 4 h</option>\r\n                            </select>\r\n                        </div>\r\n                    </span>\r\n                )}\r\n            </div>\r\n\r\n            {!editMode ? (\r\n                <Ingredients extractedRecipeId={recipeId}/>\r\n            ) : (\r\n                <></>\r\n            )}\r\n\r\n            {!editMode ? (\r\n                <div className='prepDescription'>\r\n                    <h3>PREPARATION:</h3>\r\n                    &emsp;{recipe.preparation}\r\n                </div>\r\n            ) : (\r\n                <div className='prepDescriptionInput'>\r\n                    <h3>PREPARATION:</h3>\r\n                    <textarea\r\n                        className='prepDescriptionTextarea'\r\n                        placeholder='preparation description'\r\n                        value={newPreparation}\r\n                        onChange={(e) => setNewPreparation(e.target.value)}\r\n                    />\r\n                </div>\r\n            )}\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {MdCheckCircle, MdCancel} from \"react-icons/md\";\r\nimport image from \"../assets/default-img.png\";\r\n\r\nconst Form = ({onSubmit}) => {\r\n    const [newName, setNewName] = useState('')\r\n    const [newImageUrl, setNewImageUrl] = useState('')\r\n    const [newPortions, setNewPortions] = useState('')\r\n    const [newTime, setNewTime] = useState('')\r\n    const [newPreparation, setNewPreparation] = useState('')\r\n    const navigate = useNavigate();\r\n\r\n    const submitForm = async () => {\r\n        if (newName === '') {\r\n            alert('Please fill at least name input')\r\n            return\r\n        }\r\n        const newRecipe = {\r\n            name: newName,\r\n            imageUrl: newImageUrl,\r\n            portions: newPortions === '' ? '0' : newPortions,\r\n            time: newTime,\r\n            preparation: newPreparation\r\n        }\r\n        await onSubmit(newRecipe)\r\n        navigate('/', {replace: true});\r\n    }\r\n\r\n    function validateImageUrl(imageUrl) {\r\n        if (imageUrl === undefined) {\r\n            return image.toString()\r\n        }\r\n        if (imageUrl === '' || !(imageUrl.includes('http'))) {\r\n            return image.toString()\r\n        }\r\n        return imageUrl\r\n    }\r\n\r\n    return (\r\n        <div className='formContainer'>\r\n\r\n            <h3>RECIPE ADD FORM</h3>\r\n\r\n            <div className='formInput'>\r\n                <label>Name:</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder='name'\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='formInput'>\r\n                <label>Image URL:</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder='imageUrl'\r\n                    value={newImageUrl}\r\n                    onChange={(e) => setNewImageUrl(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <img id='imagePreview'\r\n                src={validateImageUrl(newImageUrl)}\r\n                alt=''\r\n            />\r\n\r\n            <div className='formInput'>\r\n                <label>Portions:</label>\r\n                <select value={newPortions} onChange={(e) => setNewPortions(e.target.value)}>\r\n                    <option value=\"0\">?</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"11\">> 10</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className='formInput'>\r\n                <label>Preparation time:</label>\r\n                <select value={newTime} onChange={(e) => setNewTime(e.target.value)}>\r\n                    <option value=\"?\">?</option>\r\n                    <option value=\"5 min\">5 min</option>\r\n                    <option value=\"10 min\">10 min</option>\r\n                    <option value=\"15 min\">15 min</option>\r\n                    <option value=\"30 min\">30 min</option>\r\n                    <option value=\"45 min\">45 min</option>\r\n                    <option value=\"1 h\">1 h</option>\r\n                    <option value=\"1,5 h\">1,5 h</option>\r\n                    <option value=\"2 h\">2 h</option>\r\n                    <option value=\"3 h\">3 h</option>\r\n                    <option value=\"> 4 h\">> 4 h</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div id='formDescription'>\r\n                <label>Preparation description:</label>\r\n                <textarea\r\n                    className='prepDescriptionTextarea'\r\n                    placeholder='preparation description'\r\n                    value={newPreparation}\r\n                    onChange={(e) => setNewPreparation(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div id='formOptions'>\r\n                <div className='icon'>\r\n                    <MdCheckCircle\r\n                        size={35}\r\n                        onClick={() => submitForm()}\r\n                    />\r\n                </div>\r\n                <Link to='/'>\r\n                    <div className='icon'>\r\n                        <MdCancel\r\n                            size={35}\r\n                        />\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport {useEffect, useState} from \"react\";\nimport Recipes from \"./components/Recipes\";\nimport {HashRouter as Router, Route, Routes} from 'react-router-dom'\nimport About from \"./components/About\";\nimport Recipe from \"./components/Recipe\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n    const [recipes, setRecipes] = useState([])\n\n    useEffect(() => {\n        const getRecipes = async () => {\n            const res = await fetch('https://bcookbook.herokuapp.com/recipes')\n            const fetchedRecipes = await res.json()\n            console.log('fetched recipes =>', fetchedRecipes)\n            setRecipes(fetchedRecipes)\n        }\n        getRecipes().then()\n    }, []);\n\n    const saveNewRecipe = async (recipe) => {\n        const res = await fetch(`https://bcookbook.herokuapp.com/recipes`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(recipe),\n        })\n        console.log('saved recipe=>', recipe)\n        const data = await res.json()\n        setRecipes([...recipes, data])\n    }\n\n    const filterRecipes = async (id) => {\n        setRecipes(recipes.filter((recipe) => recipe.id !== id))\n    }\n\n    const replaceRecipe = async (newRecipe) => {\n        const index = recipes.indexOf(recipes.find((recipe) => recipe.id === newRecipe.id))\n        const newRecipes = recipes\n        newRecipes[index] = newRecipe\n        setRecipes(newRecipes)\n        console.log('recipes updated')\n    }\n\n    return (\n        <Router hashType='slash'>\n            <div className=\"app\">\n                <Header />\n                <Routes>\n                    <Route path='/' element={<Recipes recipes={recipes} />}/>\n                    <Route path='/recipe/:id' element={<Recipe onDelete={(id) => filterRecipes(id)} onUpdate={(recipe) => replaceRecipe(recipe)}/>}/>\n                    <Route path='/form' element={<Form onSubmit={(data) => saveNewRecipe(data)}/>}/>\n                    <Route path='/about' element={<About/>}/>\n                </Routes>\n                <Footer />\n            </div>\n        </Router>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}